(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[87],{8798:(e,n,s)=>{Promise.resolve().then(s.bind(s,3899)),Promise.resolve().then(s.bind(s,7260)),Promise.resolve().then(s.t.bind(s,2626,23)),Promise.resolve().then(s.bind(s,2734)),Promise.resolve().then(s.bind(s,5538)),Promise.resolve().then(s.bind(s,807)),Promise.resolve().then(s.bind(s,2719)),Promise.resolve().then(s.bind(s,1828)),Promise.resolve().then(s.bind(s,619)),Promise.resolve().then(s.bind(s,1811)),Promise.resolve().then(s.bind(s,7474)),Promise.resolve().then(s.bind(s,5735))},3899:(e,n,s)=>{"use strict";s.d(n,{default:()=>l});var t=s(5155),i=s(6046),r=s(8173),c=s.n(r);function l(){let e=(0,i.useParams)(),n=(0,i.useSearchParams)(),s=e.slug,r=n.get("page")||1;return(0,t.jsx)(c(),{href:"/".concat(s,"?page=").concat(r),className:"text-blue-600 hover:underline",children:"Back to List"})}},2761:(e,n,s)=>{"use strict";s.d(n,{A:()=>i});var t=s(5155);function i(e){let{text:n}=e;return(0,t.jsx)("h1",{className:"text-4xl font-bold text-left my-5 text-gray-800",children:n})}},908:(e,n,s)=>{"use strict";s.d(n,{A:()=>i});var t=s(5155);function i(e){let{text:n}=e;return(0,t.jsxs)("div",{style:{display:"flex",alignItems:"center",margin:"40px 0"},children:[(0,t.jsx)("div",{style:{flex:1,height:"1px",backgroundColor:"#ccc"}}),n&&(0,t.jsx)("span",{style:{margin:"0 10px",color:"#666",fontSize:"14px"},children:n}),(0,t.jsx)("div",{style:{flex:1,height:"1px",backgroundColor:"#ccc"}})]})}},6529:(e,n,s)=>{"use strict";s.d(n,{A:()=>i});var t=s(5155);function i(e){let{text:n}=e;return(0,t.jsx)("h2",{className:"text-2xl mt-12 mb-3 text-gray-700 font-bold",children:n})}},9969:(e,n,s)=>{"use strict";s.d(n,{A:()=>i});var t=s(5155);function i(e){let{text:n,addClass:s}=e;return(0,t.jsxs)("div",{className:"".concat(s," border border-dashed border-gray-400 p-4 bg-gray-50 italic shadow-md text-gray-700"),children:[(0,t.jsx)("strong",{className:"font-semibold",children:"Note:"})," ",n]})}},6167:(e,n,s)=>{"use strict";s.d(n,{A:()=>i});var t=s(5155);function i(e){let{href:n,prefix:s,text:i,title:r}=e;return(0,t.jsxs)("div",{children:[(0,t.jsxs)("span",{className:"text-gray-600",children:[r||"출처"," : "]}),(0,t.jsxs)("strong",{className:"text-gray-600",children:["[ ",s," ] "]}),(0,t.jsx)("a",{href:n,target:"_blank",rel:"noopener noreferrer",className:"text-blue-500 underline",children:i})]})}},2139:(e,n,s)=>{"use strict";s.d(n,{A:()=>i});var t=s(5155);function i(e){let{text:n}=e;return(0,t.jsx)("h3",{className:"text-base mt-6 mb-2 text-gray-700 font-bold",children:n})}},7260:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>h});var t=s(5155),i=s(910),r=s.n(i);s(8452);var c=s(2115),l=s(2761),a=s(6167),d=s(908),o=s(2626),x=s.n(o);function h(){return(0,c.useEffect)(()=>{r().highlightAll()},[]),(0,t.jsxs)("div",{className:x().container,children:[(0,t.jsx)(l.A,{text:"The Anatomy of a Good Decision"}),(0,t.jsx)(a.A,{href:"https://shrime.medium.com/the-anatomy-of-a-good-decision-bc3f590a0d76",prefix:"Medium",text:"https://shrime.medium.com/the-anatomy-of-a-good-decision-bc3f590a0d76"}),(0,t.jsx)(d.A,{text:"2024.01.27"}),(0,t.jsxs)("section",{className:x().paragraph,children:[(0,t.jsx)("div",{children:"좋은 결정의 해부학. 자세한 설명은 링크를 참조."}),(0,t.jsx)("div",{children:"간단한 해석을 그림 하단에 넣었다가, 위로 올렸습니다."}),(0,t.jsx)("div",{children:"왜냐면, 저는 7단계에서 맥이 빠졌기 때문입니다."})]}),(0,t.jsx)(d.A,{}),(0,t.jsx)("section",{children:(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsx)("li",{children:"Step1: 오너쉽 체크 - 결정할 권한이 있습니까? 결정권이 없다고 하기 전에 혹시 스스로 회피하고 있는지도 생각해 보세요. 도식은 두려움에 회피하지 않는데도 도움이 될겁니다."}),(0,t.jsx)("li",{children:"Step2: 가치 분석 - 세가지 중요한 것을 꼽습니다. 중요도에 대해 1-10 척도를 적용해 두세요.(예, 급여 10, 근무지 2, 근로시간 8)"}),(0,t.jsx)("li",{children:'Step3: 선택지 설정 - 어떤 선택을 할지를 나열해 둡니다. 예를들어, 결혼생활을 고민한다면 "떠난다"와 "남는다" 두가지 선택지가 있을 수 있습니다.'}),(0,t.jsx)("li",{children:"Step4: The dealbreakers(걸림돌) - 절대 받아 들일 수 없는 조건이 있는지 확인합니다."}),(0,t.jsx)("li",{children:"Step5: 각 옵션 평가 - 1~10점 척도로 각 옵션(Step2 가치)에 대해 점수를 주세요. (예, 급여: 8, 근무지 위치: 10, 근로시간: 7)"}),(0,t.jsx)("li",{children:"Step6: 수학은 마법과 같아요 - 5단계 점수와 2단계 가중치를 곱하고, 곱한 값들을 합산하면 됩니다. (예, 직장1 = 급여 10*8 + 근무지 2*10 + 근로시간 8*7)"}),(0,t.jsx)("li",{children:"Step7: 불확실성 - 비록, 이성적으로 결정을 내렸지만 아직입니다. 5일동안 그 결정을 내렸다고 생각하고 살아보세요. 그 후에, 기분이 어떤가요? 만약 계속해서 좋다면, 끝입니다."})]})}),(0,t.jsx)(d.A,{}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"마지막 7단계에서 살짝 어이가 없어졌다."}),(0,t.jsx)("div",{children:"무언가 명료한듯 하다가 슬그머니 내빼는 느낌이랄까."}),(0,t.jsx)("div",{children:"저만 이런기분인 걸까요. 암튼, 간단한 수식이지만 결정을 구체화 하는 방안으로 고려해볼 수는 있겠다."}),(0,t.jsx)("div",{children:"팀별 시너지를 계산하는 것도, 기회가 되면 정리해 보겠습니다. GPT와 질의 응답을 통해 만든 수식이지만, 이 글보다 오히려 신뢰도가 있을것 같아요. 기분이를 넣지는 않았거든요."})]}),(0,t.jsx)("br",{}),(0,t.jsx)(a.A,{href:"https://www.markshrime.com/anatomy-pdf",prefix:"markshrime.com",text:"https://www.markshrime.com/anatomy-pdf"}),(0,t.jsx)("img",{className:"mt-3",src:"/image/slug/decisionMaking.jpg"}),(0,t.jsx)(d.A,{text:"저기요... 주의사항이 뒤에 적혀있어요. 아, 안돼..."}),(0,t.jsx)("img",{className:"mt-3",src:"/image/slug/keselius.png"})]})}},2734:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>m});var t=s(5155),i=s(910),r=s.n(i);s(8452);var c=s(2115),l=s(2761),a=s(6529),d=s(2139),o=s(6167),x=s(908),h=s(9969),j=s(2626),u=s.n(j);function m(){return(0,c.useEffect)(()=>{r().highlightAll()},[]),(0,t.jsxs)("div",{className:u().container,children:[(0,t.jsx)(l.A,{text:"Say Goodbye to JavaScript’s Date. Meet the Powerful New Temporal API"}),(0,t.jsx)(o.A,{href:"https://medium.com/javascript-in-plain-english/say-goodbye-to-javascripts-date-woes-meet-the-powerful-new-temporal-api-73f99c8823e0",prefix:"Medium",text:"Say Goodbye to JavaScript’s Date. Meet the Powerful New Temporal API"}),(0,t.jsx)(x.A,{text:"2024.12.31"}),(0,t.jsx)("section",{className:u().paragraph,children:(0,t.jsxs)("div",{children:["원문을 읽고 요약한 글입니다. 당연히, ",(0,t.jsx)("strong",{children:"번역, 주석 등에 오류가 있을 확률 57,000%."}),(0,t.jsx)("br",{}),"반박시 무조건 제가 틀렸습니다.",(0,t.jsx)("br",{}),(0,t.jsx)("br",{}),"Temporal은 현재 ECMAScript 사양의 Stage 3 단계로, 최종적으로 Stage 4에 도달하면 JavaScript의 표준으로 채택됩니다. Stage 3은 대부분의 기능이 안정화되었고, 구체적인 구현 세부사항을 다듬는 단계입니다."]})}),(0,t.jsx)(x.A,{}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{className:"text-gray-500 text-2xl font-bold",children:"변덕쟁이 Date 객체와 싸우는데 지치셨죠?"}),(0,t.jsx)("br",{}),(0,t.jsx)("div",{children:"Date는 초기부터 있었습니다. 시간대 처리, 서머타임 조정, 특이한 API 설계로 수많은 개발자들을 좌절하게 했습니다."}),(0,t.jsx)("div",{children:"이제 대안이 생겼습니다."})]}),(0,t.jsx)(a.A,{text:"왜 Temporal? Date의 한계를 알아보기"}),(0,t.jsx)("section",{children:(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsx)("li",{children:"Time Zone Troubles : 다양한 시간대를 처리해야 할때 거지같음."}),(0,t.jsx)("li",{children:"Mutability Issues: Date가 가변적이라서 코드의 조그만 변경에도 사이드 이팩트가 날 수 있음."}),(0,t.jsx)("li",{children:"Quirky Month Indexing: 월이 0부터 시작해서 자주 함정에 빠뜨림."}),(0,t.jsx)("li",{children:"Limited Precision: 정밀하지 않음. 번거롭고 오류가 발생하기 쉬움."})]})}),(0,t.jsx)(a.A,{text:"The Temporal Basics: 끝내주는 녀석들"}),(0,t.jsx)("section",{children:(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsx)("li",{children:"Temporal.PlainDate"}),(0,t.jsx)("li",{children:"Temporal.PlainTime"}),(0,t.jsx)("li",{children:"Temporal.PlainDateTime"}),(0,t.jsx)("li",{children:"Temporal.ZonedDateTime"}),(0,t.jsx)("li",{children:"Temporal.Duration"})]})}),(0,t.jsx)(x.A,{}),(0,t.jsx)(a.A,{text:"써봅시다."}),(0,t.jsx)(d.A,{text:"날짜 생성"}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"const date = Temporal.PlainDate.from('2024-10-11');\nconsole.log(date.toString()); // Output: 2024-10-11"})}),(0,t.jsx)(d.A,{text:"날짜 추가"}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"const today = Temporal.PlainDate.from('2024-10-11');\nconst tomorrow = today.add({ days: 1 });\nconsole.log(tomorrow.toString()); // Output: 2024-10-12"})}),(0,t.jsx)(d.A,{text:"타임존"}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/New_York',\n  year: 2024,\n  month: 10,\n  day: 11,\n  hour: 12,\n});\nconsole.log(zonedDateTime.toString()); // Output includes the time zone"})}),(0,t.jsx)(d.A,{text:"쉬운 날짜 계산"}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"const start = Temporal.PlainDateTime.from('2024-10-11T12:00');\nconst end = Temporal.PlainDateTime.from('2024-10-11T15:30');\nconst duration = end.since(start);\nconsole.log(duration.toString()); // Output: PT3H30M (3 hours, 30 minutes)"})}),(0,t.jsx)(a.A,{text:"실제 활용 예시"}),(0,t.jsx)("section",{children:(0,t.jsxs)("ul",{className:"list-disc ml-5",children:[(0,t.jsx)("li",{children:"국제적 앱 - 유저별 시간대 관리 용이"}),(0,t.jsx)("li",{children:"스케쥴 관리 - 예약자별 시간대 관리도 용이"}),(0,t.jsx)("li",{children:"보고서 같은데서 시간 계산 좋음."})]})}),(0,t.jsx)(x.A,{}),(0,t.jsx)(a.A,{text:"Temporal API가 지원되는 플랫폼과 브라우저"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"아직 공식은 아닙니다. 하지만 곧 옵니다."}),(0,t.jsxs)("ul",{className:"list-disc ml-5",children:[(0,t.jsx)("li",{children:"브라우저: 크롬과 파이어폭스 최신 버전은 실험적 지원을 제공합니다."}),(0,t.jsx)("li",{children:"Node.js: 향후 제공할 것으로 예상됩니다."}),(0,t.jsx)("li",{children:"폴리필 사용: 지원하지 않는 환경을 위해 폴리필을 제공하고 있습니다. 즉, 사용해 볼 수 있어요."})]})]}),(0,t.jsx)("br",{}),(0,t.jsx)(h.A,{text:"Polyfill - 기존 기능을 사용하여 아직 지원하지 않는 기능을 구현하도록 하는 코드. 즉, 하위 호환을 위한 도구."}),(0,t.jsx)("br",{}),(0,t.jsx)(a.A,{text:"향후, Javascript가 날짜와 시간을 다루는 법."}),(0,t.jsx)("section",{children:"Temporal은 유연함과 신뢰성을 제공합니다. Temporal인거죠!"})]})}},5538:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>u});var t=s(5155),i=s(910),r=s.n(i);s(8452);var c=s(2115),l=s(2761),a=s(6529),d=s(2139),o=s(6167),x=s(908),h=s(2626),j=s.n(h);function u(){return(0,c.useEffect)(()=>{r().highlightAll()},[]),(0,t.jsxs)("div",{className:j().container,children:[(0,t.jsx)(l.A,{text:"This new JavaScript operator is an absolute game changer"}),(0,t.jsx)(o.A,{href:"https://medium.com/coding-beauty/new-javascript-operator-1e60dea05654",prefix:"Medium",text:"This new JavaScript operator is an absolute game changer"}),(0,t.jsx)(x.A,{text:"2024.12.31"}),(0,t.jsxs)("section",{className:j().paragraph,children:[(0,t.jsxs)("div",{children:["원문을 읽고 요약한 글이며, 당연히, ",(0,t.jsx)("strong",{children:"번역에 오류가 있을 수 있습니다."})," 반박시 당신이 옳습니다."]}),(0,t.jsx)("br",{}),(0,t.jsx)("div",{children:'?=은 "안전 할당 연산자"라고 하는데, 아직 공식 사양에 포함되지 않았습니다.'}),(0,t.jsx)(o.A,{href:"https://github.com/arthurfiorette/proposal-safe-assignment-operator",prefix:"GitHub",title:"참조",text:"ECMAScript Safe Assignment Operator Proposal"})]}),(0,t.jsx)(x.A,{}),(0,t.jsx)(a.A,{text:"No more try-catch"}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"\nasync function name(params) {\n  const [err, res] ?= await fetch('https://codingbeatydev.com');\n  if (err) return console.error(err);\n\n  const [parseError, data] ?= await res.json();\n  if (parseError) return console.log(parseError);\n\n  return data;\n}"})}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"우리는, 이제 깊은 중첩에서 벗어날 수 있다."}),(0,t.jsx)("div",{children:"에러에게 이제 닥치라 하고, 선택하는 것이 가능해졌다."})]}),(0,t.jsx)(d.A,{text:"성공 실패의 상태값이 재할당 되는것이 필요할 때, const를 사용하지 못했지만 이제 그것도 안녕이다."}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"\nfunction writeTransactionToFile(transactions) {\n  const [err, res] ?= fs.writeFileSync('sample.com.txt', transactions);\n  const writeStatus = err ? 'error' : 'success';\n}"})}),(0,t.jsx)(d.A,{text:"어떻게 동작하나?"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"?= 연산자는 내부적으로 Symbol.result를 사용한다."}),(0,t.jsx)("div",{children:"심볼은 어떤 값이 되돌아 오든 일단 작동시킬 수 있다."}),(0,t.jsx)("div",{children:"타입스크립트에서도 사용이 가능하다."})]})]})}},807:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>u});var t=s(5155),i=s(910),r=s.n(i);s(8452);var c=s(2115),l=s(2761),a=s(6529);s(2139);var d=s(6167),o=s(908),x=s(9969),h=s(2626),j=s.n(h);function u(){return(0,c.useEffect)(()=>{r().highlightAll()},[]),(0,t.jsxs)("div",{className:j().container,children:[(0,t.jsx)(l.A,{text:"Web Components Will Kill JavaScript Frameworks (Eventually)"}),(0,t.jsx)(d.A,{href:"https://javascript.plainenglish.io/web-components-will-kill-javascript-frameworks-eventually-c8ea56222e7b",prefix:"Medium",text:"Web Components Will Kill JavaScript Frameworks (Eventually)"}),(0,t.jsx)(o.A,{text:"2024.12.31"}),(0,t.jsx)("section",{className:j().paragraph,children:(0,t.jsxs)("div",{children:["원문을 읽고 요약한 글이며, 당연히, ",(0,t.jsx)("strong",{children:"번역, 주석 등에 오류가 있을 확률 58,000%."}),(0,t.jsx)("br",{}),"반박시 무조건 당신이 옳습니다."]})}),(0,t.jsx)(o.A,{}),(0,t.jsxs)("section",{children:[(0,t.jsxs)("div",{children:["2025년, 새 웹 앱을 만들려고 할 때, 거의 무의식적으로 프레임웤을 선택하려고 할 겁니다.",(0,t.jsx)("br",{})," - React, Vue, Angular, Svelte."]}),(0,t.jsx)("br",{}),(0,t.jsxs)("div",{children:["하지만, 수 천 줄의 다른 사람 코드를 끌어오지 않고, ",(0,t.jsx)("strong",{children:"순수 자바스크립트"}),"와 ",(0,t.jsx)("strong",{children:"웹 콤포넌트"}),"로 원하는걸 다할 수 있다면요?"," "]}),(0,t.jsx)("br",{}),(0,t.jsx)("div",{children:"의존성도, 락인(lock-in)도 없고, 가상 DOM의 오버헤드도 없는 - 완전 순수, 브라우저 본연의 힘으로."}),(0,t.jsx)("div",{children:"그런데, 이게 허황된 꿈이 아니면요?!"}),(0,t.jsx)("br",{}),(0,t.jsx)(x.A,{text:"lock-in: 개발 결과물이 프레임웤, 라이브러리, 생태계 등에 종속성이 커지고 나아가 만들어진 앱이 브라우저에 대한 비호환성이 증가하는 현상."})]}),(0,t.jsx)(a.A,{text:"Frameworks: 양날의 검"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"물론 장점들이 많지만, 단점이 없는게 아닙니다."}),(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsx)("li",{children:"프레임웤 락인: React를 Vue로 바꾸고 싶어요? 처음 부터 다 다시 만드세요."}),(0,t.jsx)("li",{children:"성능 오버헤드: 추상화는 앱이 작을때 문제 없지만, 규모가 커진다면? 그 차이가 쌓여 성능에 영향을 줄겁니다."}),(0,t.jsx)("li",{children:"의존성 증가: 프레임웤 업데이트는 앱을 망가뜨릴 위험을 내재하고 있습니다. 프레임웤 유지보수자들이 호환이 잘 되도록 해주기만을 바래야 할거고요."}),(0,t.jsx)("li",{children:"러닝커브: 개발자들에게 종종 프레임웤의 특징에 시간을 쓰게 만들고, JavaScript의 기본을 소흘히 하게 합니다."})]})]}),(0,t.jsx)(a.A,{text:"Pure JavaScript and Web Components"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"순수 스크립트는 사랑이죠. 아니면, 사랑과 증오거나."}),(0,t.jsx)("div",{children:"웹 컴포넌트와 짝을 이루면, 더 빠르고 재사용 가능하고, 비종속적인 그러니까 프레임웤에 종속되지 않는 컴포넌트가 됩니다."})]}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:'const MyComponentProto = Object.create(HTMLElement.prototype);\n\n  MyComponentProto.connectedCallback = function () {\n    this.innerHTML = "<div>Hello, Web Components!</div>";\n  };\n\n  // 순수스크립트로 프레임웤에 비종속적인 컴포넌트를 만듬.\n  customElements.define("my-component", MyComponentProto.constructor);\n'})}),(0,t.jsx)(a.A,{text:"Web Components가 뭔데?"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"사용자 정의 HTML 요소 입니다."}),(0,t.jsx)("div",{children:"브라우저가 지원하는 기본 기술로 스타일, 동작 등을 캡슐화하여 재사용 가능하게 만든 것입니다."}),(0,t.jsx)("br",{}),(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsx)("li",{children:"Custom Elements"}),(0,t.jsx)("li",{children:"Shadow DOM: 스타일과 로직을 캡슐화 하여, 스크립트와 CSS의 누수를 방지합니다."}),(0,t.jsx)("li",{children:"HTML Templates: 재사용 가능하며 동적인 컨텐츠를 만들기도 좋습니다."})]}),(0,t.jsx)("br",{}),(0,t.jsx)("div",{children:"이것들을 통해, 현대적이고 모듈화된 UI를 프레임웤 없이 만들 수 있습니다."})]}),(0,t.jsx)("br",{}),(0,t.jsx)(x.A,{text:"CSS leakage: 특정 요소에 적용한 CSS가 다른 요소 까지 영향을 줌."}),(0,t.jsx)("br",{}),(0,t.jsx)(a.A,{text:"이들이 왜 게임체인저인가?"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"이 둘이 왜 판을 흔들수 있는가."}),(0,t.jsx)("br",{}),(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsx)("li",{children:"Freedom from Frameworks: 이렇게 만든 컴포넌트들은 React환경이든 Vue, Angular 어디든 꼽으면 잘됩니다."}),(0,t.jsx)("li",{children:"Performance Boost: 버츄얼돔이 없으면 더 빠릅니다. 모바일 퍼스트라면 더더욱."}),(0,t.jsx)("li",{children:"Simpler Maintenance: 프레임웤의 버전과 같은 트렌드를 타지도 않을 것이고 시간이 지나도 바닐라 스크립트는 매우 견고한 코드로 남을것입니다."}),(0,t.jsx)("li",{children:"Focus on Fundamentals(기본에 충실하라): 스크립트 자체에 충실하면, 더 강하고 능숙한 개발자가 될 수 있습니다. 이건 현장에서 사용하는 프레임웤이 무엇이든 강력한 개발자로 존재할 수 있게 만듭니다."})]})]}),(0,t.jsx)("br",{}),(0,t.jsx)(a.A,{text:"그럼 Frameworks은 사라지나?"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:(0,t.jsx)("strong",{children:"아니요."})}),(0,t.jsx)("div",{children:"대규모 프로젝트 에서도, 프레임웤은 상태관리(state), 라우팅, 데이터 불러오기 등에서 강력한 기능을 제공합니다."}),(0,t.jsx)("div",{children:"하지만, 작은 규모에서 부터 몇몇 큰 프로젝트에서도 순수 스크립트는 새 애인감으로 곁눈질 하게 만들겁니다."})]}),(0,t.jsx)("br",{}),(0,t.jsx)(a.A,{text:"실제 예제"}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"\nclass NotificationBadge extends HTMLElement {\n  constructor() {\n    super();\n    const shadow = this.attachShadow({ mode: 'open' });\n\n    // Create the badge\n    const badge = document.createElement('span');\n    badge.setAttribute('class', 'badge');\n    badge.textContent = this.getAttribute('count') || '0';\n\n    // Add styles\n    const style = document.createElement('style');\n    style.textContent = `\n      .badge {\n        background: red;\n        color: white;\n        padding: 5px 10px;\n        border-radius: 12px;\n        font-size: 12px;\n        display: inline-block;\n      }\n    `;\n\n    shadow.appendChild(style);\n    shadow.appendChild(badge);\n  }\n}\n\ncustomElements.define('notification-badge', NotificationBadge);\n"})}),(0,t.jsxs)("section",{children:[(0,t.jsxs)("div",{children:["이제 ",'<notification-badge count="5"></notification-badge>',"는 앱 어디서든 쓸 수 있습니다."]}),(0,t.jsx)("div",{children:"count 변경이요? 네, 다이나믹 합니다."})]}),(0,t.jsx)("br",{}),(0,t.jsx)(x.A,{text:"개인적으로 class는 javaScript답지 못하며, class 기반 언어에서 건너온 개발자들에게 잘보이려고 속옷을 벗어다 바친, js 진영의 흑역사라 생각함."}),(0,t.jsx)("br",{}),(0,t.jsx)(a.A,{text:"프레임웤이 줄어든 미래의 개발환경"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"웹은 차츰 상호 운용성과 경량화를 향해가고 있습니다."}),(0,t.jsx)("div",{children:"순수 스크립트와 웹 콤포넌트는 이런 경향을 선도하고 있고, 더 빠르고 유지보수 성이 높으며 프레임웤에 의존적이지 않습니다."}),(0,t.jsx)("br",{}),(0,t.jsx)("div",{children:"프레임웤 버리자는게 아닙니다."}),(0,t.jsx)("br",{}),(0,t.jsx)("div",{children:"이제 프레임웤을 사용할 때, 생각을 좀 해보자는 겁니다."}),(0,t.jsxs)("div",{children:[(0,t.jsx)("span",{className:"italic",children:'"혹시, 이거 바닐라랑 웹 콤넌트로 가능할까?"'}),"스스로 대답을 해보면, 아마 놀라실 겁니다."]}),(0,t.jsx)("br",{}),(0,t.jsx)("div",{children:"미래의 웹은 점점 트렌드가 아니라 더 표준을 따르는 쪽으로 가고 있습니다."}),(0,t.jsx)("div",{children:"그리고 그 방향에서 순수 자바스크립트와 웹 콤포넌트를 사용하면, 그 가능성이 무한합니다."})]})]})}},2719:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>j});var t=s(5155),i=s(910),r=s.n(i);s(8452);var c=s(2115),l=s(2761),a=s(2139),d=s(6167),o=s(908),x=s(2626),h=s.n(x);function j(){return(0,c.useEffect)(()=>{r().highlightAll()},[]),(0,t.jsxs)("div",{className:h().container,children:[(0,t.jsx)(l.A,{text:"Day 3: Can You Spot the Bug in This JavaScript Function?"}),(0,t.jsx)(d.A,{href:"https://medium.com/javascript-in-plain-english/day-3-can-you-spot-the-bug-in-this-javascript-function-f3c95eaf1ccf",prefix:"Medium",text:"Day 3: Can You Spot the Bug in This JavaScript Function?"}),(0,t.jsx)(o.A,{text:"2024.12.31"}),(0,t.jsx)("section",{className:h().paragraph,children:(0,t.jsxs)("div",{children:["원문을 읽고 요약한 글입니다. 당연히, ",(0,t.jsx)("strong",{children:"번역, 주석 등에 오류가 있을 확률 59,000%."})]})}),(0,t.jsx)(o.A,{}),(0,t.jsx)(a.A,{text:"도전문제"}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"function createCounters() {\n  let counters = [];\n  for (var i = 0; i < 3; i++) {\n    counters.push(function() {\n      return i;\n    });\n  }\n  return counters;\n}\n\nconst counters = createCounters();\nconsole.log(counters[0]());\nconsole.log(counters[1]());\nconsole.log(counters[2]());\n"})}),(0,t.jsx)("br",{}),(0,t.jsx)(a.A,{text:"질문"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"어떻게 동작 할까요?"}),(0,t.jsx)("div",{children:"어떻게 하면 해결 할 수 있을까요?"})]}),(0,t.jsx)("br",{}),(0,t.jsx)(a.A,{text:"해설"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"반복문에서 변수 i에 var를 사용하고 있습니다."}),(0,t.jsx)("div",{children:"JavaScript에서 var는 함수 스코프를 가지므로, 반복문의 모든 반복이 동일한 변수를 공유합니다."}),(0,t.jsx)("div",{children:"해결하려면, 각 반복문에서 별도의 스코프를 생성하면 됩니다."})]}),(0,t.jsx)("br",{}),(0,t.jsx)(a.A,{text:"고치려면"}),(0,t.jsx)("section",{children:(0,t.jsx)("div",{children:"반복문에서 루프별로 스코프를 다르게 만드는 것입니다."})}),(0,t.jsx)("br",{}),(0,t.jsx)(a.A,{text:"1. let을 사용."}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"\nfunction createCounters() {\n  let counters = [];\n  for (let i = 0; i < 3; i++) {\n    counters.push(function() {\n      return i;\n    });\n  }\n  return counters;\n}\n"})}),(0,t.jsx)("br",{}),(0,t.jsx)(a.A,{text:"2. 즉시실행 함수 사용. IIFE(Immediately Invoked Function Expression)"}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"\nfunction createCounters() {\n  let counters = [];\n  for (var i = 0; i < 3; i++) {\n    (function(i) {\n      counters.push(function() {\n        return i;\n      });\n    })(i);\n  }\n  return counters;\n}\n"})}),(0,t.jsx)(o.A,{}),(0,t.jsx)(a.A,{text:"이 문제의 의미?"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"var와 let의, 차이점. 그리고 클로저가 변수와 상호작용하는 방식을 상기시켜주는 좋은 예시입니다."}),(0,t.jsx)("div",{children:"스코핑의 동작을 이해하는 것은 반복문이나 비동기 코드를 작성할 때, 버그를 피할 수 있습니다."})]})]})}},1828:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>u});var t=s(5155),i=s(2761),r=s(2139),c=s(2115),l=s(910),a=s.n(l);function d(e){let{codeType:n,codeBlock:s,initOpen:i=!0,tail:r}=e,[l,d]=(0,c.useState)(i);return(0,c.useEffect)(()=>{a().highlightAll()},[l]),(0,t.jsxs)("div",{className:"w-full mx-auto mb-3",children:[(0,t.jsxs)("button",{onClick:()=>d(!l),className:"w-full text-left p-2 bg-gray-800 text-white rounded-t-md flex justify-between items-center",children:[(0,t.jsxs)("span",{children:["\uD83D\uDCDC 코드 보기",r]}),(0,t.jsx)("span",{children:l?"▲":"▼"})]}),(0,t.jsx)("div",{className:"transition-[max-height] duration-300 ease-in-out overflow-hidden bg-gray-900 rounded-b-md ".concat(l?"max-h-[500px] p-4":"max-h-0"),children:(0,t.jsx)("pre",{className:"whitespace-pre-wrap ".concat(n),children:(0,t.jsx)("code",{children:s})})})]})}s(8452);var o=s(9969),x=s(908),h=s(2626),j=s.n(h);function u(){return(0,t.jsxs)("div",{className:j().container,children:[(0,t.jsx)(i.A,{text:"Content Security Policy, CSP"}),(0,t.jsx)(x.A,{text:"2025.1.31"}),(0,t.jsxs)("section",{className:j().paragraph,children:[(0,t.jsx)(r.A,{text:"브라우저 환경에서 window와 Object.prototype 조작을 방지하는 방법"}),(0,t.jsx)("div",{children:"- chatGpt에게 prototype에 대해 묻다, 문득 브라우저에서 너무 쉽게 prototype 조작이 가능한게 아닌가했다. 대화가 삼천포로 갔지만, 정리해두는게 좋을것 같다."}),(0,t.jsxs)("ul",{className:"list-decimal ml-5 mt-5",children:[(0,t.jsx)("li",{children:"Strict Mode"}),(0,t.jsx)("li",{children:"Object.defineProperty() : use strict와 상충된다."}),(0,t.jsx)("li",{children:"Object.freeze(), Object.seal()"}),(0,t.jsx)("li",{className:"font-bold",children:"CSP(Content Security Policy) 설정: script-src 'self'."}),(0,t.jsx)("li",{children:"React/Vue에서 쓸 수 있는 빠른 훅 - useLayoutEffect()/beforeCreate()"})]})]}),(0,t.jsx)(x.A,{}),(0,t.jsx)(r.A,{text:"1. Strict Mode"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:'단순하다, js 파일 상단에 "use strict"를 추가한다. 효과는 아래와 같다. 1번이 이번 주제 관련이다.'}),(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsx)("li",{className:"font-bold",children:"읽기 전용 속성 변경 방지- 근데, 이러면 Object.defineProperty를 이용해 writable을 false로 바꿀 수 없다."}),(0,t.jsx)("li",{children:"암묵적 전역변수 방지 - x = 10; 과 같이, 대뜸 선언도 없이 쓸 수 없게 된다."}),(0,t.jsxs)("li",{children:["객체의 속성 중복 선언 방지 - ","{namn: 'Jone', name: 'Doe'}"," 이런거 안된다."]}),(0,t.jsx)("li",{children:"this 제한 - this가 undefined 혹은 null일 때 자동으로 글로벌 this(window)를 참조하지 않고 undefined가 된다."}),(0,t.jsx)("li",{children:"delete 제한 강화 - 변수, 함수의 delete 사용이 금지된다."}),(0,t.jsx)("li",{children:"예약어 사용 제한 - implements, interface, let, package, private, protected, public, static, yield 등을 변수나 함수명으로 못쓴다."})]}),(0,t.jsx)(o.A,{addClass:"mt-2",text:"use strict는 조금 느슨하지만 전체적으로 일괄적인 제한을 하는데   유용하고, Object.defineProperty는 특정 속성을 매우 정교하게 제어할 수   있는 차이가 있겠다."})]}),(0,t.jsx)("br",{}),(0,t.jsx)(r.A,{text:"2. Object.defineProperty()"}),(0,t.jsx)(d,{codeType:"language-javascript",codeBlock:'Object.defineProperty(Object.prototype, "isAdmin", {\n    value: false,\n    writable: false,\n    configurable: false\n});\n'}),(0,t.jsx)("br",{}),(0,t.jsx)(d,{codeType:"language-javascript",codeBlock:'const originalAlert = window.alert;\n\nObject.defineProperty(window, "alert", {\n    get: function () {\n        return originalAlert;\n    },\n    set: function () {\n        console.warn("\uD83D\uDEA8 alert 함수 변경이 차단되었습니다!");\n    },\n    configurable: false\n});\n\n'}),(0,t.jsx)("div",{children:"이런 식으로, 특정 프로토타입 값을 변경하지 못하게 만들어 버리는 것. 유저가 핸들링 하는것 보다 먼저 걸어 두어야 하므로, 빠른 훅이 필요하다."}),(0,t.jsx)("br",{}),(0,t.jsx)(r.A,{text:"3. Object.feeze(), Object.seal()"}),(0,t.jsx)("section",{children:(0,t.jsx)("div",{children:"Object.freeze(window)를 하게되면, window 객채의 오버라이드 등 window의 모든 기존 속성을 수정하지 못한다. Object.seal(window)는 기존 속성은 변경 가능하지만, 새로운 속성 추가는 불가능해진다."})}),(0,t.jsx)("br",{}),(0,t.jsx)(r.A,{text:"4. CSP(Content Security Policy) 설정"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"현재 페이지와 동일한 출처(origin)에서 실행되는 스크립트만 허용한다. 상당히 좋다."}),(0,t.jsx)(d,{codeType:"language-html",codeBlock:'<!DOCTYPE html>\n<html lang="ko">\n<head>\n    <meta charset="UTF-8">\n    <meta http-equiv="Content-Security-Policy" content="script-src \'self\'">\n    <title>CSP 적용 예제</title>\n</head>\n<body>\n    <script>\n        console.log("✅ 안전한 스크립트 실행!");\n    <\/script>\n    \n    \x3c!-- 외부 스크립트 주입 시도 --\x3e\n    <script src="https://evil-hacker.com/hack.js"><\/script> \n</body>\n</html>\n',initOpen:!1}),(0,t.jsx)("div",{className:"mt-5",children:"하지만, 이러면, CDN으로 jqeury등을 가져와도 실행되지 않는다. 아래와 같이 허용하려는 사이트를 적어서 우회는 가능하다. 복수의 사이트도 적을 수 있다."}),(0,t.jsx)(d,{codeType:"language-html",codeBlock:'<meta http-equiv="Content-Security-Policy" content="script-src \'self\' https://code.jquery.com https://www.googletagmanager.com;">'})]}),(0,t.jsxs)("section",{className:"mt-5",children:["nonce(난수) 기반 실행 - 각 페이지 로드 시 난수(nonce) 값을 생성하여 특정 스크립트 허용.",(0,t.jsx)("div",{children:" 1단계. CSP 설정"}),(0,t.jsx)(d,{codeType:"language-html",codeBlock:"<meta http-equiv=\"Content-Security-Policy\" content=\"script-src 'self' 'sha256-AbCdEf123...='\">"}),(0,t.jsx)("div",{children:" 2단계. 실행 스크립트"}),(0,t.jsx)(d,{codeType:"language-html",codeBlock:'<script nonce="abc123"> alert("이 특정 인라인 스크립트는 허용됨!"); <\/script>'})]}),(0,t.jsxs)("section",{className:"mt-5",children:[(0,t.jsx)("div",{children:"HTTP 응답 헤더를 통해 서버에서 설정할 수도있다."}),(0,t.jsx)(d,{codeType:"language-text",codeBlock:"// Apach 서버\n  Header set Content-Security-Policy \"script-src 'self'\"\n  "}),(0,t.jsx)(d,{codeType:"language-text",codeBlock:"// Nginx 서버\n  add_header Content-Security-Policy \"script-src 'self'\";"}),(0,t.jsx)(d,{codeType:"language-javascript",codeBlock:"// Node.js (Express, helmet)\nconst express = require('express');\nconst helmet = require('helmet');\n\nconst app = express();\n\n// Content Security Policy 적용\napp.use(\n    helmet.contentSecurityPolicy({\n        directives: {\n            defaultSrc: [\"'self'\"],\n            scriptSrc: [\"'self'\"]\n        }\n    })\n);\n\napp.get(\"/\", (req, res) => {\n    res.send(\"<script>alert('✅ 안전한 페이지!');<\/script>\");\n});\n\napp.listen(3000, () => {\n    console.log(\"\uD83D\uDE80 서버 실행: http://localhost:3000\");\n});\n  ",initOpen:!1,tail:" - Node.js"})]})]})}},619:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>u});var t=s(5155),i=s(910),r=s.n(i);s(8452);var c=s(2115),l=s(2761),a=s(6529),d=s(6167),o=s(908),x=s(9969),h=s(2626),j=s.n(h);function u(){return(0,c.useEffect)(()=>{r().highlightAll()},[]),(0,t.jsxs)("div",{className:j().container,children:[(0,t.jsx)(l.A,{text:"JavaScript에서 ev.currentTarget과 ev.target의 Event Handling을 이해하기"}),(0,t.jsx)(d.A,{href:"https://jagathishsaravanan.medium.com/understanding-ev-currenttarget-and-ev-target-in-javascript-event-handling-5f6bdc2c0e2a",prefix:"Medium",text:"https://jagathishsaravanan.medium.com/understanding-ev-currenttarget-and-ev-target-in-javascript-event-handling-5f6bdc2c0e2a"}),(0,t.jsx)(o.A,{text:"2025.1.21"}),(0,t.jsx)("section",{children:(0,t.jsx)("div",{children:"이벤트 커런트타겟(ev.currentTarget)과 이벤트 타겟(ev.target)의 차이에 대해 이해해보자."})}),(0,t.jsx)(o.A,{}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"ev.currentTarget과 ev.target에 대해 알아보기 전에, 자바스크립트가 이벤트를 어떻게 처리하는지 보자."}),(0,t.jsx)("div",{children:"버튼을 클릭하거나 마우스를 올리거나 등, 이벤트가 발생하면 오브젝트가 생성됩니다."}),(0,t.jsx)("div",{children:"이 오브젝트는 이벤트 정보들을 담고 있습니다. 어떤 엘리먼트에서 발동했는지, 어떤 이벤트였는지 등등의 정보죠."}),(0,t.jsx)("div",{children:"이벤트리스너들은, 특정한 이벤트가 일어났을때 발동하도록 되어있는 함수입니다."}),(0,t.jsx)("div",{children:"아래는 이벤트 리스너의 예입니다."})]}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"document.querySelector('button').addEventListener('click', function(ev) {\n    console.log(ev.target);\n  })"})}),(0,t.jsx)(a.A,{text:"What is ev.target?"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"ev.target property는 이벤트가 트리거된 엘리먼트를 참조합니다."}),(0,t.jsx)("div",{children:"이것은, 이벤트가 시작된 DOM의 가장 구체적인 element를 가리킵니다."}),(0,t.jsx)("div",{children:"정확히 어떤 element와 상호작용했는지를 알고싶을때 특히, 유용합니다."})]}),(0,t.jsx)(x.A,{text:"여기서 '구체적인 element'는 DOM트리의 부모, 자식, 형제 등 여러 엘리먼트 중에 실제 이벤트가 트리거된 엘리먼트를 강조한다 이해했습니다."}),(0,t.jsx)(a.A,{text:"What is ev.currentTarget?"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"한편, ev.currentTarget property는 이벤트 핸들러가 연결된 엘리먼트를 참조합니다."}),(0,t.jsx)("div",{children:"이것은, 어떤 엘리먼트에서 이벤트가 기원 했는지와 상관없이 이벤트 리스너가 연결된 엘리먼트를 가리킵니다."}),(0,t.jsx)("div",{children:"다음을 보시죠."})]}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"document.getElementById('parent').addEventListener('click', function(ev) {\n    console.log('ev.currentTarget:', ev.currentTarget);\n});"})}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"#child 버튼이 클릭되더라도 ev.currentTarget은 #parent div를 참조할겁니다. 왜냐하면, 리스너가 거기에 붙어있기 때문이죠."}),(0,t.jsx)("div",{children:"즉, 아래와 같이 나올겁니다."})]}),(0,t.jsx)("pre",{className:"language-html",children:(0,t.jsx)("code",{children:'ev.currentTarget: <div id="parent">...</div>'})}),(0,t.jsx)(a.A,{text:"Key Differences Between ev.target and ev.currentTarget"}),(0,t.jsx)("section",{children:(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsx)("li",{children:"이벤트의 기원 - ev.target은 실제 이벤트가 시작된 엘리먼트를, ev.currentTarget은 이벤트 핸들러가 연결된 엘리먼트를 가리킵니다."}),(0,t.jsx)("li",{children:"Event Propagation(전파) - 만약 DOM에서 이벤트가 bubbles up(위로 올라감. 버블링.)하면, ev.target은 이벤트가 발생한 원래의 엘리먼트에 남아있습니다. 반면, ev.currentTarget은 엘리먼트의 이벤트 리스너가 실행 되었는지에 따라 달라질 수 있습니다."}),(0,t.jsx)("li",{children:"활용 - ev.target은 이벤트가 발생한 구체적인 엘리먼트를 알고싶을때. ev.currentTarget은 이벤트 리스너가 연결된 엘리먼트를 확인하는게 더 중요할 때."})]})}),(0,t.jsx)(x.A,{text:"Event Propagation - 이벤트 전파, 그러니까 버블링(bubbling)과 캡처링(capturing) 모두를 의미."}),(0,t.jsx)(x.A,{text:"이벤트 단계간 순위 - 1.캡처링, 2.타깃 단계, 3.버블링 순서로 실행됩니다."}),(0,t.jsx)(x.A,{text:"Capturing Phase- 이벤트 루트에서 타겟으로 내려감."}),(0,t.jsx)(x.A,{text:"Target Phase - 타겟 일레먼트에서 실행되는 단계."}),(0,t.jsx)(x.A,{text:"Bubbling Phase- 이벤트가 타겟에서 루트를 향해 올라감."}),(0,t.jsx)(o.A,{text:"잠시 번역을 멈추고, 여기서 저의 의문과 실험입니다."}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"만약, 어떤 엘리먼트의 리스너가 루트와 클릭된 엘리먼트 중간에 있다면 currentTarget은 캡처링과 버블링 이 두번에 걸쳐 실행될 것인가?"}),(0,t.jsx)("pre",{className:"language-html",children:(0,t.jsx)("code",{children:'<div id="root">\n  <div id="middle">\n    <button id="target">Click me</button>\n  </div>\n</div>'})}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:'const root = document.getElementById("root");\nconst middle = document.getElementById("middle");\nconst target = document.getElementById("target");\n\nfunction logEvent(ev) {\n  console.log(\n    `Phase: ${ev.eventPhase}, currentTarget: ${ev.currentTarget.id}, target: ${ev.target.id}`\n  );\n}\nmiddle.addEventListener("click", logEvent, true); // 캡처링 - 3번째 인자를 true로 함.\nmiddle.addEventListener("click", logEvent); // 버블링 - 3번째 인자는 default가 false, 버블링에서 실행함. 항상 써오던게 사실은 버블링만 실행.'})}),(0,t.jsx)("div",{children:"네, meddle 엘리먼트 리스너는 두번 실행 됩니다."}),(0,t.jsx)("div",{children:"실험을 하고보니 멍청한 의문 같습니다."}),(0,t.jsx)("div",{children:"중간 뿐 아니라 타겟도 캡처링과 버블링 두단계에 걸쳐 리스너가 실행 될 수 있습니다."}),(0,t.jsx)("div",{children:"엄밀하게 말하면 두개의 리스너를 붙여놓는 것이지요. 세번째 인자에 true, false 두 종류로요."}),(0,t.jsx)("br",{}),(0,t.jsxs)("div",{children:[(0,t.jsx)("p",{children:"* 여기서 추가 정리."}),(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsx)("li",{children:"stopPropagation - 이벤트 전파를 멈춤. 캡처링에서 멈춘다면 버블링 단계로 넘어가지 않음. 특히, 다른 리스너는 실행됨."}),(0,t.jsx)("li",{children:"stopImmediatePropagation - 완전 멈춤. 같은 엘리먼트에 등록된 다른 리스너도 실행되지 않음."}),(0,t.jsx)("li",{children:"preventDefault - 이벤트 기본동작을 멈춤. 기본동작은 이벤트가 자동 수행되도록 되어있는 동작을 의미. 예로 a태그는 링크로의 이동, button은 폼 전송과 같은 것. 브라우저가 특별히 정의한 기본 동작이 없다면, 아무런 효과가 없음."})]})]}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:'document.addEventListener("contextmenu", (event) => {\n    event.preventDefault(); // 오른쪽 클릭 메뉴 막기\n    console.log("컨텍스트 메뉴를 막았습니다.");\n});'})})]}),(0,t.jsx)(o.A,{text:"나루호도, 다시 본문 번역을 이어갑니다."}),(0,t.jsx)(a.A,{text:"이벤트 핸들링의 위임"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"이벤트 위임은, 부모에게 하나의 이벤트 리스너를 연결해서 여러 자손 엘리먼트의 이벤트를 핸들링하는 일반적인 패턴입니다. 이때, ev.target은 어떤 자손이 트리거 되었는지 알고자 할 때, 유용할 겁니다."}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"document.getElementById('parent').addEventListener('click', function(ev) {\n    if (ev.target.tagName === 'BUTTON') {\n        console.log('Button clicked:', ev.target.id);\n    }\n});"})}),(0,t.jsx)("div",{children:"위에서 우리는 부모에게 이벤트 리스너를 붙였습니다. 클릭 이벤트 리스너가 target element가 button인지 체크합니다. 상황에 따라 이벤트를 핸들링 하면 되겠죠."})]}),(0,t.jsx)(x.A,{text:"이벤트 Delegated(위임)을 하는 이유 - 성능 최적화, 코드 간소화, 동적으로 생성되는 엘리먼트의 처리."})]})}},1811:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>h});var t=s(5155),i=s(910),r=s.n(i);s(8452);var c=s(2115),l=s(2761),a=s(2139),d=s(908),o=s(2626),x=s.n(o);function h(){return(0,c.useEffect)(()=>{r().highlightAll()},[]),(0,t.jsxs)("div",{className:x().container,children:[(0,t.jsx)(l.A,{text:"HTTP/1.1과 HTTP/2의 차이"}),(0,t.jsx)(d.A,{text:"2024.01.26"}),(0,t.jsx)(a.A,{text:"프로토콜 차이:"}),(0,t.jsx)("section",{children:(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsx)("li",{children:"HTTP/1.1 : 요청 - 응답 기반. 하나의 연결에 하나의 요청만 처리."}),(0,t.jsxs)("li",{children:["HTTP/2: 하나의 요청에서 여러 요청을 병렬로 처리. 예, 하나의 연결상태에서 독립적인 스트림을 여러개 만듬. HTML, CSS, JS스트림 등."," "]})]})}),(0,t.jsx)(a.A,{text:"헤더 압축:"}),(0,t.jsx)("section",{children:(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsx)("li",{children:"HTTP/1.1 : 요청마다 헤더 전체를 반복해서 전송."}),(0,t.jsx)("li",{children:"HTTP/2: 이전에 전송한 헤더와 차이점만 전송. 헤더를 압축 전송량 줄임."})]})}),(0,t.jsx)(a.A,{text:"서버 푸시:"}),(0,t.jsx)("section",{children:(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsx)("li",{children:"HTTP/1.1 : 클라이언트가 요청한 자원만 응답."}),(0,t.jsx)("li",{children:"HTTP/2: 클라이언트가 필요로 할 자원을 미리 전송 가능. 예, HTML을 요청하면 관련 CSS와 JS를 푸시할 수 있음. 서버 개발자가 해당 요청에 대해 별도 코딩 필요."})]})}),(0,t.jsx)(a.A,{text:"연결유지:"}),(0,t.jsx)("section",{children:(0,t.jsx)("ul",{className:"list-decimal ml-5",children:(0,t.jsx)("li",{children:"HTTP/2: 1보다 리소스를 절약."})})}),(0,t.jsx)(a.A,{text:"Node.js와 HTTP/2:"}),(0,t.jsx)("section",{children:"http2 모듈을 지원하며, Node.js 18부터는 Fetch API도 기본 내장되어 있음."}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"const http2 = require('http2');\n\nconst server = http2.createServer((req, res) => {\n  res.end('Hello, HTTP/2!');\n});\n\nserver.listen(3000);"})}),(0,t.jsx)(a.A,{text:"Deno와 Bun:"}),(0,t.jsx)("section",{children:"Deno는 Fetch API 기본 지원, Bun은 아직 Fetch 지원하지 않음."}),(0,t.jsx)(a.A,{text:"Node.js HTTP/2 서버푸시 스캐폴딩:"}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"const http2 = require('http2');\nconst fs = require('fs');\n\nconst server = http2.createSecureServer({\n  // http2에서는 https가 권장.\n  key: fs.readFileSync('server-key.pem'),\n  cert: fs.readFileSync('server-cert.pem')\n});\n\n// http2에서 클라이어트 요청을 받을 때마다, stream 이벤트가 발생함. 매 요청의 고유 stream.\nserver.on('stream', (stream, headers) => { // stream, headers 객체를 인자로 받음.\n  const path = headers[':path']; // 요청경로. http1.1에서 GET /index.html과 같이 받던 것이 http2에서는 :path에 저장됨. (:method, :path, :scheme, :authority 등)\n\n  // HTML 요청\n  if (path === '/index.html') {\n\n    // 서버 푸시로 CSS 전송\n    stream.pushStream({ ':path': '/style.css' }, (err, pushStream) => {\n      if (!err) {\n        pushStream.respondWithFile('style.css', { 'content-type': 'text/css' });\n      }\n    });\n\n    // 서버 푸시로 JS 전송\n    stream.pushStream({ ':path': '/script.js' }, (err, pushStream) => {\n      if (!err) {\n        pushStream.respondWithFile('script.js', { 'content-type': 'application/javascript' });\n      }\n    });\n\n    // ** 푸시된 리소스(CSS, JS)가 클라이언트의 캐시에 이미 존재하면 네트워크 자원이 낭비될 수 있습니다. **\n\n    // respondWithFile - 클라이언트가 명시적으로 요청한 리소스에 대한 응답.\n    stream.respondWithFile('index.html', { 'content-type': 'text/html' });\n  }\n\n  // CSS 요청 처리\n  else if (path === '/style.css') {\n    stream.respondWithFile('style.css', { 'content-type': 'text/css' });\n  }\n\n  // JS 요청 처리\n  else if (path === '/script.js') {\n    stream.respondWithFile('script.js', { 'content-type': 'application/javascript' });\n  }\n\n  // 기타 요청 처리\n  else {\n    stream.respond({ ':status': 404 });\n  }\n});\n\n// 서버 시작\nserver.listen(3000, () => {\n  console.log('HTTP/2 Server is ready on port 3000.');\n});"})})]})}},7474:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>u});var t=s(5155),i=s(910),r=s.n(i);s(8452);var c=s(2115),l=s(2761),a=s(6529),d=s(2139),o=s(6167),x=s(908);s(9969);var h=s(2626),j=s.n(h);function u(){return(0,c.useEffect)(()=>{r().highlightAll()},[]),(0,t.jsxs)("div",{className:j().container,children:[(0,t.jsx)(l.A,{text:"Debouncing in JavaScript: How to delay a function execution"}),(0,t.jsx)(o.A,{href:"https://codedamn.com/news/javascript/debouncing-in-javascript",prefix:"codedamn",text:"Debouncing in JavaScript: How to delay a function execution"}),(0,t.jsx)(x.A,{text:"2024.12.31"}),(0,t.jsxs)("section",{className:j().paragraph,children:[(0,t.jsxs)("div",{children:["원문을 읽고 요약한 글입니다. ",(0,t.jsx)("strong",{children:"번역, 주석 등에 오류가 있을 확률은 57,328%"})," 입니다."]}),(0,t.jsx)("div",{children:"디바운싱(Debouncing)은 이벤트가 짧은 간격으로 여러 번 실행되지 않도록 일정 시간 후에 실행되도록 하고, 브라우저나 서버의 부하를 줄이려는 의도로 사용. 주로 검색창."}),(0,t.jsx)("div",{children:"반면, 스로틀링(Throttling)은 일정시간 간격으로 일어나게 하여, 스크롤에 적합함."})]}),(0,t.jsx)(x.A,{}),(0,t.jsx)(a.A,{text:"JavaScript에서 디바운싱(Debouncing)이란 무엇인가?"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"웹사이트에서 버튼을 클릭했을때 콘텐츠가 조금 느리게 로딩된다고 느낀 적이 있나요?"}),(0,t.jsx)("div",{children:"검색 필드에 입력한 후 결과가 표시되기까지 약간의 지연이 있을 때는요?"}),(0,t.jsx)("div",{children:"개발자들은, 디바운스를 사용하여 이런 딜레이를 만들고 서버에 불필요한 요청을 보내지 않도록 합니다."})]}),(0,t.jsx)(a.A,{text:"디바운싱(Debouncing)은 어떻게 동작하나?"}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"디바운싱은 코드를 실행하기 전에 지연 타이머를 시작합니다."}),(0,t.jsx)("div",{children:"어떤 이유로 동작이 반복되면, 큐에 두번째 이벤트를 쌓는 대신 이전 프로세스를 중단시키고 현재 이벤트에만 집중하게 합니다."})]}),(0,t.jsx)(a.A,{text:"JavaScript 디바운싱(Debouncing) 함수"}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"function debounce(callback, timer) {\n  let timeoutId;\n\n  return (...args) => {\n    // save the current context (this)\n    const context = this;\n\n    // clear the existing timeout\n    clearTimeout(timeoutId);\n\n    // create a new timeout\n    timeoutId = setTimeout(() => {\n      callback.apply(context, args);\n    }, timer);\n  };\n}\n"})}),(0,t.jsx)("br",{}),(0,t.jsxs)("section",{children:[(0,t.jsx)("div",{children:"다음과 같이 동작합니다."}),(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsx)("li",{children:"기존 타이머 초기화"}),(0,t.jsx)("li",{children:"새 타이머 설정"}),(0,t.jsx)("li",{children:"apply()를 통해 콜백 실행. 해당 함수의 매개변수(args)와 컨텍스트(this)를 전달 합니다."})]}),(0,t.jsx)("div",{children:"타이머는 생성된 특정 타임아웃에 대한 참조 ID를 반환합니다."}),(0,t.jsx)("div",{children:"이 아이디를 통해 기존 타임아웃을 취소시킵니다."}),(0,t.jsx)("div",{children:"타이머 스케쥴링과 취소의 비용은 매우 적은 편이기 때문에 비용에 대해 크게 걱정하지 않아도 됩니다."})]}),(0,t.jsx)(a.A,{text:"사용례"}),(0,t.jsx)(d.A,{text:"검색창"}),(0,t.jsx)("pre",{className:"language-html",children:(0,t.jsx)("code",{children:'<input type="text" id="input">'})}),(0,t.jsx)("br",{}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"const input = document.getElementById('input');\n\ninput.addEventListener('input', callAPI);\n\nfunction callAPI() {\n    // Time consuming API call\n    console.log('API called!');\n}\n"})}),(0,t.jsx)("section",{children:(0,t.jsx)("div",{children:"위 코드는 API called가 입력이 들어올 때마다 계속 발생합니다. 반면 아래는 다릅니다."})}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"const debouncedCallAPI = debounce(callAPI, 500);\n\ninput.addEventListener('input', debouncedCallAPI);\n"})}),(0,t.jsx)(d.A,{text:"마우스 이벤트"}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"window.addEventListener('mousemove', mouseMove);\n\nfunction mouseMove(e) {\n    let x = e.clientX;\n    let y = e.clientY;\n    console.log('Mouse moved to: ', x, y);\n}\n"})}),(0,t.jsx)("br",{}),(0,t.jsx)("pre",{className:"language-javascript",children:(0,t.jsx)("code",{children:"const debouncedMouseMove = debounce(mouseMove, 500);\n\nwindow.addEventListener('mousemove', debouncedMouseMove);\n"})}),(0,t.jsx)("br",{}),(0,t.jsx)("section",{children:(0,t.jsx)("div",{children:"마찬가지로 디바운스를 사용하면 더 효율적입니다."})})]})}},5735:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>m});var t=s(5155),i=s(910),r=s.n(i);s(8452);var c=s(2115),l=s(2761),a=s(6529);s(2139);var d=s(6167),o=s(908),x=s(8173),h=s.n(x),j=s(2626),u=s.n(j);function m(){return(0,c.useEffect)(()=>{r().highlightAll()},[]),(0,t.jsxs)("div",{className:u().container,children:[(0,t.jsx)(l.A,{text:"2024 JavaScript Rising Stars"}),(0,t.jsx)(d.A,{href:"https://risingstars.js.org/2024/en#section-framework",prefix:"risingstars",text:"https://risingstars.js.org/2024/en#section-framework"}),(0,t.jsx)(o.A,{text:"2025.1.13"}),(0,t.jsx)("section",{className:u().paragraph,children:"상기 링크가 그래프로 표시되어 있어 훨씬 보기 좋습니다."}),(0,t.jsx)(o.A,{}),(0,t.jsx)(a.A,{text:"Front-end Frameworks"}),(0,t.jsx)("section",{children:(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsxs)("li",{children:["htmx +16.8k :",(0,t.jsx)(h(),{href:"https://htmx.org/essays/is-htmx-another-javascript-framework/",className:"text-blue-600 hover:underline",children:"https://htmx.org/essays/is-htmx-another-javascript-framework/"})]}),(0,t.jsx)("li",{children:"React +14.2k"}),(0,t.jsx)("li",{children:"Svelte +6.1k"}),(0,t.jsx)("li",{children:"Vue +5.9k"}),(0,t.jsx)("li",{children:"Angular +3.5k"})]})}),(0,t.jsx)(a.A,{text:"React Ecosystem"}),(0,t.jsx)("section",{children:(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsxs)("li",{children:["shadcn/ui +38.0k :",(0,t.jsx)(h(),{href:"https://ui.shadcn.com/",className:"text-blue-600 hover:underline",children:"https://ui.shadcn.com/"})]}),(0,t.jsx)("li",{children:"Excalidraw +27.0k"}),(0,t.jsx)("li",{children:"Magic UI +13.2k"}),(0,t.jsx)("li",{children:"Next.js +12.1k"}),(0,t.jsx)("li",{children:"Refine +11.7k"})]})}),(0,t.jsx)(a.A,{text:"Vue Ecosystem"}),(0,t.jsx)("section",{children:(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsx)("li",{children:"Nuxt +6.2k"}),(0,t.jsx)("li",{children:"PrimeVue +5.4k"}),(0,t.jsx)("li",{children:"Slidev +4.7k"}),(0,t.jsx)("li",{children:"shadcn-vue +4.1k"}),(0,t.jsx)("li",{children:"VitePress +3.7k"})]})}),(0,t.jsx)(a.A,{text:"Back-end/Full-stack"}),(0,t.jsx)("section",{children:(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsx)("li",{children:"Next.js +12.1k"}),(0,t.jsx)("li",{children:"Hono +11.5k"}),(0,t.jsx)("li",{children:"Astro +9.8k"}),(0,t.jsx)("li",{children:"Nest +6.8k"}),(0,t.jsx)("li",{children:"Strapi +6.3k"})]})}),(0,t.jsx)(a.A,{text:"Styling / CSS in JS"}),(0,t.jsx)("section",{children:(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsx)("li",{children:"Tailwind CSS +9.4k"}),(0,t.jsx)("li",{children:"DaisyUI +6.6k"}),(0,t.jsx)("li",{children:"Bootstrap +4.8k"}),(0,t.jsx)("li",{children:"Pico.css +3.1k"}),(0,t.jsx)("li",{children:"Tamagui +3.0k"})]})}),(0,t.jsx)(a.A,{text:"Component Libraries"}),(0,t.jsx)("section",{children:(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsx)("li",{children:"shadcn/ui +38.0k"}),(0,t.jsx)("li",{children:"Magic UI +13.2k"}),(0,t.jsx)("li",{children:"PrimeVue +5.4k"}),(0,t.jsx)("li",{children:"NextUI +4.9k"}),(0,t.jsx)("li",{children:"Mantine +4.5k"})]})}),(0,t.jsx)(a.A,{text:"Testing"}),(0,t.jsx)("section",{children:(0,t.jsxs)("ul",{className:"list-decimal ml-5",children:[(0,t.jsxs)("li",{children:["Playwright +10.4k :",(0,t.jsx)(h(),{href:"https://playwright.dev/",className:"text-blue-600 hover:underline",children:"https://playwright.dev/"})]}),(0,t.jsx)("li",{children:"Puppeteer +3.8k"}),(0,t.jsx)("li",{children:"Storybook +3.7k"}),(0,t.jsx)("li",{children:"Micro Agent +3.1k"}),(0,t.jsx)("li",{children:"Stagehand +2.8k"})]})})]})}},2626:e=>{e.exports={container:"Content_container__YuMwV",paragraph:"Content_paragraph__JAFHy",codeBlock:"Content_codeBlock__DpLTZ",highlight:"Content_highlight__CU7wi"}}},e=>{var n=n=>e(e.s=n);e.O(0,[29,141,173,434,441,517,358],()=>n(8798)),_N_E=e.O()}]);